// @generated by protoc-gen-es v1.10.0
// @generated from file rpc/wordvault/api.proto (package wordvault, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Alphagram } from "../wordsearcher/searcher_pb.js";

/**
 * @generated from enum wordvault.Score
 */
export declare enum Score {
  /**
   * @generated from enum value: SCORE_NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: SCORE_AGAIN = 1;
   */
  AGAIN = 1,

  /**
   * @generated from enum value: SCORE_HARD = 2;
   */
  HARD = 2,

  /**
   * @generated from enum value: SCORE_GOOD = 3;
   */
  GOOD = 3,

  /**
   * @generated from enum value: SCORE_EASY = 4;
   */
  EASY = 4,
}

/**
 * @generated from message wordvault.Card
 */
export declare class Card extends Message<Card> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: wordsearcher.Alphagram alphagram = 2;
   */
  alphagram?: Alphagram;

  /**
   * @generated from field: bytes card_json_repr = 3;
   */
  cardJsonRepr: Uint8Array;

  /**
   * The retrievability of a card is not part of the json repr and is computed
   * as of the time of request.
   *
   * @generated from field: double retrievability = 4;
   */
  retrievability: number;

  /**
   * @generated from field: bytes review_log = 5;
   */
  reviewLog: Uint8Array;

  constructor(data?: PartialMessage<Card>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.Card";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Card;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Card;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Card;

  static equals(a: Card | PlainMessage<Card> | undefined, b: Card | PlainMessage<Card> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetCardInfoRequest
 */
export declare class GetCardInfoRequest extends Message<GetCardInfoRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: repeated string alphagrams = 2;
   */
  alphagrams: string[];

  constructor(data?: PartialMessage<GetCardInfoRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetCardInfoRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCardInfoRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCardInfoRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCardInfoRequest;

  static equals(a: GetCardInfoRequest | PlainMessage<GetCardInfoRequest> | undefined, b: GetCardInfoRequest | PlainMessage<GetCardInfoRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetNextScheduledRequest
 */
export declare class GetNextScheduledRequest extends Message<GetNextScheduledRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  constructor(data?: PartialMessage<GetNextScheduledRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetNextScheduledRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNextScheduledRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNextScheduledRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNextScheduledRequest;

  static equals(a: GetNextScheduledRequest | PlainMessage<GetNextScheduledRequest> | undefined, b: GetNextScheduledRequest | PlainMessage<GetNextScheduledRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.Cards
 */
export declare class Cards extends Message<Cards> {
  /**
   * @generated from field: repeated wordvault.Card cards = 1;
   */
  cards: Card[];

  constructor(data?: PartialMessage<Cards>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.Cards";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cards;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cards;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cards;

  static equals(a: Cards | PlainMessage<Cards> | undefined, b: Cards | PlainMessage<Cards> | undefined): boolean;
}

/**
 * @generated from message wordvault.ScoreCardRequest
 */
export declare class ScoreCardRequest extends Message<ScoreCardRequest> {
  /**
   * @generated from field: wordvault.Score score = 1;
   */
  score: Score;

  /**
   * @generated from field: string lexicon = 2;
   */
  lexicon: string;

  /**
   * @generated from field: string alphagram = 3;
   */
  alphagram: string;

  constructor(data?: PartialMessage<ScoreCardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.ScoreCardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScoreCardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScoreCardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScoreCardRequest;

  static equals(a: ScoreCardRequest | PlainMessage<ScoreCardRequest> | undefined, b: ScoreCardRequest | PlainMessage<ScoreCardRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.ScoreCardResponse
 */
export declare class ScoreCardResponse extends Message<ScoreCardResponse> {
  /**
   * @generated from field: google.protobuf.Timestamp next_scheduled = 1;
   */
  nextScheduled?: Timestamp;

  /**
   * @generated from field: bytes card_json_repr = 2;
   */
  cardJsonRepr: Uint8Array;

  constructor(data?: PartialMessage<ScoreCardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.ScoreCardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScoreCardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScoreCardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScoreCardResponse;

  static equals(a: ScoreCardResponse | PlainMessage<ScoreCardResponse> | undefined, b: ScoreCardResponse | PlainMessage<ScoreCardResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.AddCardsRequest
 */
export declare class AddCardsRequest extends Message<AddCardsRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: repeated string alphagrams = 2;
   */
  alphagrams: string[];

  constructor(data?: PartialMessage<AddCardsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.AddCardsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCardsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCardsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCardsRequest;

  static equals(a: AddCardsRequest | PlainMessage<AddCardsRequest> | undefined, b: AddCardsRequest | PlainMessage<AddCardsRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.AddCardsResponse
 */
export declare class AddCardsResponse extends Message<AddCardsResponse> {
  /**
   * @generated from field: uint32 num_cards_added = 1;
   */
  numCardsAdded: number;

  constructor(data?: PartialMessage<AddCardsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.AddCardsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCardsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCardsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCardsResponse;

  static equals(a: AddCardsResponse | PlainMessage<AddCardsResponse> | undefined, b: AddCardsResponse | PlainMessage<AddCardsResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.EditLastScoreRequest
 */
export declare class EditLastScoreRequest extends Message<EditLastScoreRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: string alphagram = 2;
   */
  alphagram: string;

  /**
   * @generated from field: wordvault.Score new_score = 3;
   */
  newScore: Score;

  /**
   * @generated from field: bytes last_card_repr = 4;
   */
  lastCardRepr: Uint8Array;

  constructor(data?: PartialMessage<EditLastScoreRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.EditLastScoreRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EditLastScoreRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EditLastScoreRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EditLastScoreRequest;

  static equals(a: EditLastScoreRequest | PlainMessage<EditLastScoreRequest> | undefined, b: EditLastScoreRequest | PlainMessage<EditLastScoreRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetCardCountRequest
 */
export declare class GetCardCountRequest extends Message<GetCardCountRequest> {
  constructor(data?: PartialMessage<GetCardCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetCardCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCardCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCardCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCardCountRequest;

  static equals(a: GetCardCountRequest | PlainMessage<GetCardCountRequest> | undefined, b: GetCardCountRequest | PlainMessage<GetCardCountRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.CardCountResponse
 */
export declare class CardCountResponse extends Message<CardCountResponse> {
  /**
   * @generated from field: map<string, uint32> num_cards = 1;
   */
  numCards: { [key: string]: number };

  /**
   * @generated from field: uint32 total_cards = 2;
   */
  totalCards: number;

  constructor(data?: PartialMessage<CardCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.CardCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CardCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CardCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CardCountResponse;

  static equals(a: CardCountResponse | PlainMessage<CardCountResponse> | undefined, b: CardCountResponse | PlainMessage<CardCountResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.NextScheduledCountRequest
 */
export declare class NextScheduledCountRequest extends Message<NextScheduledCountRequest> {
  /**
   * @generated from field: bool only_overdue = 1;
   */
  onlyOverdue: boolean;

  /**
   * @generated from field: string timezone = 2;
   */
  timezone: string;

  /**
   * @generated from field: string lexicon = 3;
   */
  lexicon: string;

  constructor(data?: PartialMessage<NextScheduledCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.NextScheduledCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextScheduledCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextScheduledCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextScheduledCountRequest;

  static equals(a: NextScheduledCountRequest | PlainMessage<NextScheduledCountRequest> | undefined, b: NextScheduledCountRequest | PlainMessage<NextScheduledCountRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.NextScheduledBreakdown
 */
export declare class NextScheduledBreakdown extends Message<NextScheduledBreakdown> {
  /**
   * @generated from field: map<string, uint32> breakdown = 1;
   */
  breakdown: { [key: string]: number };

  constructor(data?: PartialMessage<NextScheduledBreakdown>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.NextScheduledBreakdown";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextScheduledBreakdown;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextScheduledBreakdown;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextScheduledBreakdown;

  static equals(a: NextScheduledBreakdown | PlainMessage<NextScheduledBreakdown> | undefined, b: NextScheduledBreakdown | PlainMessage<NextScheduledBreakdown> | undefined): boolean;
}

/**
 * @generated from message wordvault.PostponeRequest
 */
export declare class PostponeRequest extends Message<PostponeRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: uint32 num_to_postpone = 2;
   */
  numToPostpone: number;

  constructor(data?: PartialMessage<PostponeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.PostponeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostponeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostponeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostponeRequest;

  static equals(a: PostponeRequest | PlainMessage<PostponeRequest> | undefined, b: PostponeRequest | PlainMessage<PostponeRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.PostponeResponse
 */
export declare class PostponeResponse extends Message<PostponeResponse> {
  /**
   * @generated from field: uint32 num_postponed = 1;
   */
  numPostponed: number;

  constructor(data?: PartialMessage<PostponeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.PostponeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostponeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostponeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostponeResponse;

  static equals(a: PostponeResponse | PlainMessage<PostponeResponse> | undefined, b: PostponeResponse | PlainMessage<PostponeResponse> | undefined): boolean;
}

