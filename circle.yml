# Config file for CircleCI. See https://circleci.com/gh/domino14/Webolith
machine:
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  node:
    version: stable
  services:
    - docker
    - redis
  python:
    version: 2.7.12
  environment:
    REPO: /home/ubuntu/$CIRCLE_PROJECT_REPONAME
    PGSQL_DB_NAME: circle_test
    PGSQL_USER: ubuntu
    PGSQL_HOST: 127.0.0.1
    PGSQL_PASSWORD:
    # Debug for tests is False even if I set this to True.
    DEBUG: false
    DEBUG_JS: false
    # Just some random secret key
    INTERCOM_APP_SECRET_KEY: abcdefghijklmnopqrstuvwxyz
    SECRET_KEY: csw*nc9gznwuz)(w9&u#h_b2dp1%hzf_w#)%yrzwas%+v8ck_q
    WORD_DB_LOCATION: /home/ubuntu/db
    # For collecting static files to later copy into Nginx. This
    # dir must be in the context of the build, so inside the kubernetes dir.
    STATIC_ROOT: $REPO/kubernetes/webolith_static/
dependencies:
  pre:
    - mkdir -p ~/.yarn-cache
    - curl -o- -L https://yarnpkg.com/install.sh | bash
  cache_directories:
    - ~/.yarn-cache
  override:
    - yarn install
    # XXX: We should build the image first and test it.
    - pip install -r djAerolith/test_requirements.txt
    - pip install -r djAerolith/prod_requirements.txt
    - git clone git@bitbucket.org:cesar_del_solar/webolith-private.git /home/ubuntu/webolith-private
    - mkdir $WORD_DB_LOCATION
    - mv /home/ubuntu/webolith-private/*.db $WORD_DB_LOCATION
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - sudo mv ./kubectl /usr/local/bin/kubectl
test:
  override:
    # Build the js bundles.
    - yarn full-prod-build
    # Test the app.
    - cd djAerolith && ./manage.py test -v2
    # Gather all JS files and compile messages for building into image.
    - cd djAerolith && ./manage.py collectstatic --noinput
    - cd djAerolith && ./manage.py compilemessages

deployment:
  production:
    branch: master
    commands:
      # We need to create the kubernetes service yaml files, and apply new
      # ones from config vars.
      - ./build-dockers.sh
      - cp /home/ubuntu/webolith-private/admin.conf /home/ubuntu/admin.conf
      - fab create_k8s_configs:prod
      - fab deploy:prod
  staging:
    branch: staging
    commands:
      - ./build-dockers.sh
      - cp /home/ubuntu/webolith-private/dev-admin.conf /home/ubuntu/admin.conf
      - fab create_k8s_configs:dev
      - fab deploy:dev
